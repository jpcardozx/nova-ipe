"use strict";(()=>{var E="2.1.0",C=Date.now(),u="v5-".concat(C),f="nova-ipe-chunk-cache-".concat(u),A="nova-ipe-offline-cache-".concat(u),m="nova-ipe-static-cache-".concat(u),g="nova-ipe-api-cache-".concat(u),v="nova-ipe-image-cache-".concat(u),w=["/_next/static/chunks/main-app.js","/_next/static/chunks/app/page.js","/_next/static/chunks/webpack.js","/offline","/404","/","/fonts/critical-icons.woff2","/images/logo.png","/manifest.webmanifest"],h={chunks:/\/_next\/static\/chunks\//,static:/\.(css|js|woff2|ico)$/,image:/\.(png|jpg|jpeg|svg|webp|gif|avif)$/,api:/\/api\//,sanity:/cdn\.sanity\.io/,fonts:/\.(woff2|woff|ttf|otf)$/},p={chunks:{name:f,maxAge:24*60*60*1e3,maxEntries:300,priority:"high"},image:{name:v,maxAge:30*24*60*60*1e3,maxEntries:100},static:{name:m,maxAge:7*24*60*60*1e3,maxEntries:200},api:{name:g,maxAge:60*60*1e3,maxEntries:50}};self.addEventListener("install",a=>{let n=a;console.log("[Service Worker] Installing version",E),n.waitUntil(Promise.all([caches.open(f).then(e=>(console.log("[Service Worker] Precaching critical assets"),e.addAll(w))),caches.open(m),caches.open(v),caches.open(g)]).then(()=>self.skipWaiting()).catch(e=>(console.error("[Service Worker] Precaching failed:",e),self.skipWaiting())))});self.addEventListener("activate",a=>{let n=a;console.log("[Service Worker] Activating version",E),n.waitUntil(caches.keys().then(e=>Promise.all([...e.map(o=>{if(o.startsWith("nova-ipe-")&&![f,m,v,g,A].includes(o))return console.log("[Service Worker] Deleting old cache:",o),caches.delete(o)}),self.clients.claim()])))});function d(a){return a!==void 0&&a.status===200&&a.type==="basic"}function k(a){let n=new URL(a.url);return h.image.test(n.pathname)||h.sanity.test(n.hostname)?p.image:h.static.test(n.pathname)?p.static:h.api.test(n.pathname)?p.api:h.chunks.test(n.pathname)?p.chunks:null}async function _(a,n,e){let o=await caches.open(a),r=await o.keys(),c=Date.now();for(let s of r){let t=await o.match(s);if(!t)continue;let i=t.headers.get("date");if(i){let l=new Date(i).getTime();c-l>e&&await o.delete(s)}}if(r.length>n){let s=r.length-n;for(let t=0;t<s;t++)await o.delete(r[t])}}self.addEventListener("fetch",a=>{let n=a,{request:e}=n;if(e.method!=="GET")return;if(h.chunks.test(e.url)){n.respondWith((async()=>{try{let c=await caches.open(f),s=await c.match(e);if(s)return fetch(e).then(i=>{d(i)&&c.put(e,i.clone())}).catch(()=>{}),s;let t=await fetch(e);return d(t)&&await c.put(e,t.clone()),t}catch(c){let t=await(await caches.open(f)).match(e);return t||new Response("",{status:503})}})());return}let r=k(e);e.url.includes("/_next/static/chunks/")||w.includes(e.url)?n.respondWith(caches.match(e).then(c=>{let s=fetch(e).then(t=>{if(d(t)){let i=t.clone();caches.open(f).then(l=>void l.put(e,i))}return t});return c||s})):r?n.respondWith(caches.open(r.name).then(async c=>{let s=await c.match(e),t=fetch(e).then(i=>{if(d(i)){let l=i.clone();c.put(e,l).then(()=>void _(r.name,r.maxEntries,r.maxAge))}return i}).catch(()=>{if(s)return s;throw new Error("No cached response available")});return s||t})):n.respondWith((async()=>{try{let c=await Promise.race([fetch(e).catch(()=>{}),new Promise(t=>{setTimeout(async()=>{let i=await caches.match(e);t(i||void 0)},3e3)})]);if(c)return c;let s=await caches.match(e);return s||new Response("",{status:503})}catch(c){return new Response("",{status:503})}})())});})();
//# sourceMappingURL=service-worker.js.map
