/**
 * Next.js Configuration - Otimizada para Deploy e Desenvolvimento
 * Configuração separada para ambientes de desenvolvimento e produção
 *
 * @version 3.0.0
 * @date 21/05/2025
 * @type {import('next').NextConfig}
 */

const webpack = require('webpack');
const { applySourceMapIgnore } = require('./webpack.sourcemap.config');

const isProduction = process.env.NODE_ENV === 'production';
const isVercel = process.env.VERCEL === '1';
const isDev = !isProduction;

const nextConfig = {
  reactStrictMode: true,
  poweredByHeader: false,
  compress: true,

  experimental: {
    optimizeCss: true,
    optimizePackageImports: ['lucide-react']
  },

  images: {
    formats: ['image/avif', 'image/webp'],
    deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048],
    imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
    dangerouslyAllowSVG: true,
    contentDispositionType: 'attachment',
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'cdn.sanity.io',
        pathname: '**'
      },
      {
        protocol: 'https',
        hostname: 'images.unsplash.com',
        pathname: '**'
      }
    ]
  },

  webpack: (config, { dev, isServer }) => {
    if (!dev) {
      config = applySourceMapIgnore(config);
    }

    if (dev) {
      config.infrastructureLogging = {
        level: 'error'
      };

      config.plugins.push(
        new webpack.IgnorePlugin({
          resourceRegExp: /@opentelemetry\/instrumentation/
        })
      );
    }

    config.cache = {
      type: 'filesystem',
      buildDependencies: {
        config: [__filename]
      },
      compression: 'gzip'
    };

    return config;
  },

  env: {
    NEXT_PUBLIC_SANITY_USE_CDN: "true",
    NEXT_PUBLIC_SANITY_USE_STEGA: "false",
    NEXT_TELEMETRY_DISABLED: !isProduction ? "1" : "0"
  }
};

module.exports = nextConfig;